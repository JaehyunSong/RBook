# 分析環境の管理 {#sec-renv}

```{r renv-common}
#| include: false
source("_common.R")
```

{renv}による分析環境の管理/共有

---

分析環境と再現可能な研究

* 例1: 古いパッケージではできなかったものが、今はできるようになっている
   * {ggplot2}の`geom_pointrange()`の場合、昔は点と垂直線のみが引けた（マッピングは`x`、`y`、`ymin`、`ymax`のみ可能）。
   * 点と水平線の描きたい場合は、`coord_flip()`で座標系を回転する必要があった。
   * 今の{ggplot2}だと、`xmin`と`xmax`にもマッピングができるため、`coord_flip()`不要
   * 多分いないと思うが、現在の仕様でコードを古い{ggplot2}で走らせるとエラーが出る。
* 例2: 昔はできたものの、今はできない
   * 華麗に復活した{dplyr}の`rowwise()`は、無くなりかけていた関数
   * {tidyr}の`gather()`と`spread()`は近い将来、無くなる
* 例3: 仕様が変わり、関数名、仮引数名、実引数の使用可能なクラスが異なる場合
   * 開発途上のパッケージだとあり得る。

{revn}のインストール

```r
pacman::p_load(renv)
```

---

**分析環境の保存**

プロジェクトの使用を強く推奨 (第[-@sec-rbasic-project]章を参照)

分析を始める前: コンソールに

```r
renv::init()
```

分析が終わった後: コンソールに

```r
renv::snapshot()
```

---

**分析環境を再現**

```r
renv::restore()
```

---

詳細は{renv}[開発者のページ](https://rstudio.github.io/renv/articles/renv.html)を参照

{pacman}との相性は大丈夫だろうか。また、GitHubから導入したパッケージの場合は?
