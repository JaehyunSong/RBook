# Rのインストール {#sec-installation}

```{r}
#| include: false
source("_common.R")
```

<!--
* 矢内が作った古い資料 ([macOS編](https://yukiyanai.github.io/jp/resources/docs/install-R_macOS.pdf)、[Linux (Ubuntu)編](https://yukiyanai.github.io/jp/resources/docs/install-R_ubuntu.pdf)、[Windows編](https://yukiyanai.github.io/jp/resources/docs/install-R_windows.pdf))
-->

## 自分のPCにインストール

　Rのバージョン、使用するOSのバージョンによってインストール方法が変更される可能性がある。したがって、最新情報はネット上の解説記事等を参照されたい。以下の内容はmacOS 14（Sonoma）、Ubuntu 22.04 LTS（Jammy）、Windows 11にR 4.3.3をインストールする方法である。Rのインストールが終わったら、統合開発環境（IDE）であるRStudioのインストールを推奨する。RStudioのインストール方法については第[-@sec-ide]章を参照されたい。

### macOS

#### Step 1: Xcodeのインストール

　macOSのApp Storeを起動し、「Xcode」と検索する。検索結果画面のXcodeの「入手（英語版はGET）」をクリックする（「開く」や「OPEN」と書かれている場合はインストール済みなので、このステップは飛ばしても良い。）。Xcodeはかなりサイズが大きいため、時間に余裕を持って実行すること（1時間以上かかる場合もある）。

![](Figs/Install/xcode.png){fig-align="center" width="400px"}

#### Step 2: Command Line Toolsのインストール

　macOSのターミナル（terminal）を起動し、以下のように入力する（前の`$`は入力しない）。

```bash
$ xcode-select --install
```

　後は画面の案内に従って、操作するだけだ。もし、以下のようなメッセージが表示される場合は Command Line Tools がインストール済みであることを意味するので、このステップは飛ばして良い。

```
xcode-select: error: command line tools are already installed, use "Software Update" in System Settings to install updates
```

#### Step 3: XQuartzのインストール

　[XQuartzの公式サイト](https://www.xquartz.org/)にアクセスし、インストーラをダウンロードする。公式サイトのトップページでインストーラのファイル名をクリックすればダウンロードできる。あとはダウンロードしたファイルを開き、指示通りに操作すれば良い。

![](Figs/Install/xquartz.png){fig-align="center" width="500px"}

#### Step 4: Rのインストール

　Rの公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の "Download R for macOS" をクリックする。インストーラーが2種類あるため、自分のPCに合ったものをダウンロードする必要がある。自分のPCのCPUがApple Silicon（M1またはM2）であれば、"For Apple silicon Macs:"のファイルを、Intel製であれば"For older Intel Macs:"のファイルをダウンロードする。

![](Figs/Install/cran_mac.png){fig-align="center" width="800px"}

　自分のPCのCPUを確認するには、macOSの左上のりんご（<i class="bi bi-apple"></i>）ボタンをクリックし、「このMacについて（About This Mac）」をクリックする。すると自分のPC情報が表示される。ここで「チップ」項目を確認し、"M1" か"M2" であればApple Silicon であり、Intel という文字が含まれていればIntel製のCPUである（たとえば、「3.8 GHz 8-Core Intel Core i7」）。

![](Figs/Install/mac_cpu.png){fig-align="center" width="300px"}

　ダウンロードしたインストーラーを開き、指示通りに操作すればRのインストールは完了だ。

### Windows

#### Step 1: Rのインストール

　Rの公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の "Download R for Windows" をクリックする。続いて、「base」をクリックする。最後に次の画面で "Download R-4.3.1 for Windows" をクリックしてインストーラをダウンロードする。「4.3.1」の箇所は最新バージョンの値であり、新しいバージョンがリリースされると、ここの数字も変わる。

![](Figs/Install/cran_win1.png){fig-align="center" width="600px"}

　ダウンロードが完了したらインストーラを開き、指示通りに操作する。基本的に「はい」、「次へ」だけで問題ない。

#### Step 2: Rtoolsのインストール

　引き続き、Rの公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の "Download R for Windows" をクリックする。続いて、"Rtools" をクリックする。いくつかのRtoolsが表示されるが、ここでは自分が使用するRのバージョンに合ったものを選択する。たとえば、インストールしたRのバージョンが4.3.Xなら「RTools 4.3」を、4.1.3なら「RTools 4.0」を選択する。右側に対応するRバージョンが表示されるのでよく見て正しいものを選ぶこと。

![](Figs/Install/cran_win2.png){fig-align="center" width="700px"}

　続いてRtoolsのインストーラをダウンロードする。ただし、インストーラのリンクが画面の最上段に位置しないことに注意されたい。ページの真ん中辺りに "Rtools43 installer" というリンクがあるが、これをクリックするとインストーラがダウンロードされる。ここでも「43」はRtoolsのバージョンに応じて数字が異なる。

![](Figs/Install/cran_win3.png){fig-align="center" width="800px"}

　ダウンロードが完了したらインストーラを開き、指示通りに操作する。基本的に「はい」、「次へ」だけで問題ない。

#### Step 3: ユーザー名を確認する

　今は日本語のユーザー名でもRインストールの問題はないと考えられるが、パッケージのインストールができない場合がある。パッケージのインストール先に英数字以外の文字が含まれている場合は、インストール先を変更した方が良いだろう。そのためには、パッケージのインストール先を調べる必要がある。Rを起動し、以下のコマンドを入力する。

```{.r}
Sys.getenv("R_LIBS_USER")
```

```{r}
#| echo: false
print("C:\\Users\\ユーザ名\\AppData\\Local/R/win-library/4.3")
```

　Rのバージョンによって、最後の数字が変わるが、それは問題ない。重要なのはここの「ユーザ名」に英数字以外の文字が含まれているかどうかだ。ここに日本語などの英数字以外の文字が使われていると、この後パッケージがインストールできない可能性がある。以下にそのような場合の対処方法を紹介する。もし、**パスに日本語や韓国語、中国語が含まれていない場合はStep 3は読み飛ばそう**。

　まず、画面下段の検索画面から「環境変数」と入力し、「環境変数を編集」をクリックする。

![](Figs/Install/win_path1.png){width="700px" fig-align="center"}

　ウィンドウの真ん中辺りにある「新規（N）...」をクリックする。

![](Figs/Install/win_path2.png){width="500px" fig-align="center"}

　「変数名（N）：」には「R_LIBS_USER」を入力し（スペルミスに注意）、「変数値（V）：」には英数字のみで構成されたパスを入力する（「_」などの記号は使える）。ここではCドライブ直下の「r_packages」というフォルダーを指定した。まだ作っていないフォルダーではあるが、今後、自動的に生成される。入力後、OKをクリックする。

![](Figs/Install/win_path3.png){width="700px" fig-align="center"}

　画面上段の「〜のユーザー環境変数（U）」に「R_LIBS_USER」項目が追加されていれば、OKを選択する。

![](Figs/Install/win_path4.png){width="500px" fig-align="center"}

　Rを**再起動**し、もう一度`Sys.getenv("R_LIBS_USER")`を実行してみる。先ほど指定したパスが表示されれば成功だ。今後、新しいRパッケージはここで指定したフォルダーに保存されるようになる。

```{.r}
Sys.getenv("R_LIBS_USER")
```

```{r}
#| echo: false
print("C:\\r_packages\\")
```

### Ubuntu

　以下の内容はDebian系LinuxディストリビューションであるUbuntuをベースとした解説である。他のDebian系やその他のLinux（Redhat系、Arch系）についてはCRAN公式ページを参照されたい。

#### Step 1: インストールの準備

　これから様々なパッケージをインストールしていくが、その前にgdebiとwgetをインストールしておく必要がある。gdebiは`.deb`形式のソフトウェア、ライブラリをインストールするためのパッケージであり、wgetはインターネット上のファイルをダウンロードするためのパッケージだ。ただ、Linuxをそこそこ使っている読者であれば、この2つはインストール済みである可能性が高く、そもそも多くのDebian系ディストリビューションでは最初から導入済みである。もし、インストールされているかどうか不安な場合はターミナル（terminal; 「端末」とも訳される場合がある）を開き、以下のように入力する（最初の`$`は入力しない）。最初はパスワード入力が求められる。

```bash
$ sudo apt update
$ sudo apt install -y gdebi-core wget
```

#### Step 2: 日本語フォントのインストール

　引き続き、作図に使用する日本語フォントをインストールする。好きなフォントを選んでほしい（ただし、プログラミングのために等幅フォントにしたほうがよい）ところだが、ここでは[IPAex](https://moji.or.jp/ipafont/)フォントを導入する。ターミナルから以下のコマンドを入力し、IPAexフォントをインストールする。

```bash
$ sudo apt install -y fonts-ipaexfont
```

　続いて、以下のコマンドでフォントのキャッシュファイルを更新する。

```bash
$ fc-cache -f -v
```

　以上でIPAexフォントは使えるが、正しく登録されているかを確認したい場合は以下のように入力する。登録されている場合、IPAexフォントがインストールされているパスが表示される。

```bash
$ fc-list | grep IPAex
```

#### Step 3: 依存パッケージのインストール

　続いて、多くのRパッケージが依存するLinux側のパッケージをインストールする。こちらは必須ではないが、LinuxでRを使っていくといつかは通る道である。他にも依存パッケージは数十種類（それ以上かも）あるが、ここではよく使われるものをインストールしておく。これらをインストールしておけば、少なくとも{tidyverse} 2.0.0のインストールは問題ない。

```sh
$ sudo apt install -y build-essential
$ sudo apt install -y libcurl4-openssl-dev
$ sudo apt install -y libcurl4-gnutls-dev
$ sudo apt install -y libxml2-dev
$ sudo apt install -y libssl-dev
$ sudo apt install -y libx11-dev
$ sudo apt install -y libglu1-mesa-dev
$ sudo apt install -y libmagick++-dev
$ sudo apt install -y libudunits2-0
$ sudo apt install -y libudunits2-dev
$ sudo apt install -y libgdal-dev
$ sudo apt install -y libproj-dev
$ sudo apt install -y libgmp3-dev
$ sudo apt install -y curl
$ sudo apt install -y poppler-utils
$ sudo apt install -y poppler-data
$ sudo apt install -y libharfbuzz-dev
$ sudo apt install -y libfribidi-dev
```

　今後、Rでパッケージをインストールしようとして、「XXXがない」と表示される場合があるだろう。その場合、「ターミナルで以下のようなコマンドを入力してね」といったメッセージも表示される。メッセージをよく読んで、ターミナルで指示通りにコマンドを入力しよう。

#### Step 4: Rのインストール

　Rのインストールには2つの選択肢がある。簡単なやり方はUbuntu公式レポジトリからインストールする方法だ。ただし、この方法だとRの最新版は使えない（2023年6月現在の最新版は4.3.1だた、R 4.2.1がインストールされる）。最新版にこだわらないなら、ターミナルで以下のように入力するだけだ。

```sh
$ sudo apt update
$ sudo apt install -y r-base
```

　もう一つのやり方はやや面倒だが、最新版が使える。Ubuntuレポジトリでなく、Rの公式レポジトリからインストールするのだ。そのためには予めRのレポジトリを登録しておく必要がある。以下のコマンドを入力するが、R 5.xがリリースされるとURLも変更になるため、以下のコマンドはあくまでR 4.Xの例であることを断っておく。

```sh
$ sudo apt update -qq
$ sudo apt install --no-install-recommends software-properties-common dirmngr
$ gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
$ wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
$ sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
$ sudo apt update
$ sudo apt install -y r-base
```

　これでRのインストールは完了だ。ターミナルで以下のように入力するとRが起動される。

```sh
$ R
```

## Rのアップデート

### macOSとUbuntu

　macOS、またはUbuntuの場合、インストールと同じ手順で良い。macOSの場合、古いものが新しいものに上書きされる。Ubuntuの場合、`sudo apt update`と`sudo apt install -y r-base`を実行した場合、インストール済みのRRが旧バージョンである場合はそれを削除し、新しいものをインストールする。

### Windows

　既存のRを削除し、新しいバージョンをインストールすれば良い。また、Rのバージョンが0.1単位で上がる（つまり、左から1番目または2番目の数字が変更になる）とRtoolsのバージョンも上がる可能性がある。たとえば、R 4.3.1が4.3.2へアップデートされた場合、Rtoolsは既存のものを使うが、4.3.3が4.4.0にアップデートされるとRtoolsもアップデータしなければならないかもしれない。その場合、Rtoolsについてもインストール済みのものを削除し、新しいものをインストールする。Windowsのソフトウェアの削除方法はWindowsのバージョンによって異なるので、ネット上の記事等を参照されたい。

## クラウド版の利用

　自分のPCでなく、クラウドでRとRStudioを使うこともできる。インターネットに接続すれば、どのPCからでも使用できる。自分のPCのスペックが低い場合でも、快適な分析ができる[^cloud-spec]。そして何より複雑なインストール手順が不要という点が最大のメリットである。

[^cloud-spec]: ただし、自分のPCがハイスペックでも、クラウド版のRはサーバーの性能に依存するため、ハイスペックの恩恵は受けられない。

### RStudio Cloud

　[RStudio Cloud](https://posit.cloud/)はRStudioの開発元である[Posit](https://posit.co/)社が提供するクラウドサービスである。会員登録さえすればすぐにRとRStudioが使える。無料のプランもあるが、月25時間までしか使用できず、性能面での制約も大きい。有料のプランはいくつか用意されており、最も安い月5米ドルのプラン（Cloud Plus）だと無料プランと同じ性能で月75時間まで利用できる。

### JDCat分析ツール

　[JDCat分析ツール](https://meatwiki.nii.ac.jp/confluence/display/jdcatanalysis)は国立情報学研究所（NII）が提供するクラウド版のR + RStudioであり、`ac.jp`、または`go.jp`で終わるメールアドレスを持っている場合**のみ**使用可能だ。有料のプランは存在せず、全て無料である。また、稼働時間の制約もないため、おすすめだ。Rだけでなく、Python + Jupyterも使えるのも長所の一つだ。ただし、常に最新版が使えるわけではなく、RとRStudioは半年〜1年遅れてアップデートされる。

:::{.callout-important}
#### 「導入」は1回だけで十分

　ここでは「導入」と「再利用」について解説するが、「導入」はインストールに該当する内容であり、1回だけで十分だ。2回以上行っても良いが、新しいサーバを立ち上げることになる（サーバ間のデータ転送はできない）。一人が生成可能な最大サーバ数は10個までである。特段の事情が無い限り、「導入」は1回のみ実行し、次回からは「最利用」の手順に従ってJDCat分析ツールを起動しよう。
:::

#### 導入

1. Orthrosのホームーページ（<https://ui.orthros.gakunin.nii.ac.jp/>）へアクセスし、アカウントを作成する[^idp-nii]。<u>登録に使用するメールアドレスは**必ず**`ac.jp`または`go.jp`で終わるメールアドレスを入力する</u>必要がある。もし、すでにOrthrosアカウントを持っているなら、このステップはスキップする。

[^idp-nii]: 画像付きの解説が<https://meatwiki.nii.ac.jp/confluence/pages/viewpage.action?pageId=130024239>にある。

2. アカウントが発行されたら、以下のURLへアクセスする。『私たちのR』で使用するパッケージを事前にインストールするように設定したレポジトリである。
   * <https://binder.cs.rcos.nii.ac.jp/v2/gh/JaehyunSong/Binder_R/HEAD>

3. 所属機関の選択で「Orthros」を入力し、選択する。

![](Figs/Install/jdcat1.png){width="800px" fig-align="center"}

4. Orthrosのアカウント情報を入力し、ログインする。
   * アカウント作成直後であれば、ログイン画面は表示されない可能性が高い。

5. SPへの属性提供に対する同意画面が表示される。上の選択肢のままだと今後、ログインする度にこの画面が表示される。下の選択肢を選択すると今後、この画面は表示されない。

![](Figs/Install/jdcat2.png){width="400px" fig-align="center"}

6. しばらく待つとJupyter Hubのホーム画面が表示される（〜5分所要）。

![](Figs/Install/jdcat3.png){width="800px" fig-align="center"}

7. 画面右上の「New▼」をクリックし、RStudioを選択するとRStudioが起動される。

![](Figs/Install/jdcat4.png){width="800px" fig-align="center"}

#### 再利用

1. 以下のURLへアクセスする。ブラウザーのお気に入りに追加しておいても良いだろう。
   * <https://jupyter.cs.rcos.nii.ac.jp/>

2. 所属機関の選択で「Orthros」を入力し、選択する。

![](Figs/Install/jdcat1.png){width="800px" fig-align="center"}

3. OpenIdPのアカウント情報を入力し、ログインする。

4. SPへの属性提供に対する同意画面が表示されるかも知れない。上の選択肢のままだと今後、ログインする度にこの画面が表示される。下の選択肢を選択すると今後、この画面は表示されない。

![](Figs/Install/jdcat2.png){width="400px" fig-align="center"}

5. サーバリストにあるURLをクリックすると、Jupyter Hubのホーム画面が表示される。

![](Figs/Install/jdcat5.png){width="800px" fig-align="center"}

