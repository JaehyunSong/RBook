# Rのインストール {#sec-installation}

```{r}
#| include: false
source("_common.R")
```

* 矢内による資料 ([macOS編](https://yukiyanai.github.io/jp/resources/docs/install-R_macOS.pdf)、[Linux (Ubuntu)編](https://yukiyanai.github.io/jp/resources/docs/install-R_ubuntu.pdf)、[Windows編](https://yukiyanai.github.io/jp/resources/docs/install-R_windows.pdf))

## 自分のPCにインストール

　Rのバージョン、使用するOSのバージョンによってインストール方法が変更される可能性がある。したがって、最新情報はネット上の解説記事等を参照されたい。以下の内容はmacOS 13（Ventura）、Ubuntu 22 LTS、Windows 11にR 4.3.0をインストールする方法である。Rのインストールが終わったら、統合開発環境（IDE）であるRStudioのインストールを推奨する。RStudioのインストール方法は第[-@sec-ide]章を参照すること。

### macOS

#### Step 1: Xcodeのインストール

　macOSのApp Storeを起動し、「Xcode」と検索する。検索結果画面のXcodeの「入手（英語版はGET）」をクリックする。Xcodeはかなりサイズが大きいため、時間に余裕を持って実行すること（1時間以上かかる場合もある）。

![](Figs/Install/xcode.png){fig-align="center" width="400px"}

#### Step 2: Command Line Toolsのインストール

　macOSのターミナル（terminal）を起動し、以下のように入力する（前の`$`は入力しない）。

```bash
$ xcode-select --install
```

　後は画面の案内に従って、操作するだけだ。

#### Step 3: Xquartzのインストール

　[Xquartzの公式ホームページ](https://www.xquartz.org/)へアクセスし、インストーラーをダウンロードする必要がある。公式ホームページはGoogle等で「xquartz」と検索すれば最上段にヒットする。ホームページの最初のページからインストーラーのファイル名をクリックするとダウンロードできる。あとはダウンロードしたファイルを開き、指示通りに操作すれば良い。

![](Figs/Install/xquartz.png){fig-align="center" width="500px"}

#### Step 4: Rのインストール

　Rの公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の「Download R for macOS」をクリックする。インストーラーが2種類あるため、自分のPCに合ったものをダウンロードする必要がある。自分のPCのCPUがApple Silicon M1かM2であれば、「For Apple silicon Macs:」のファイルを、Intel製であれば「For older Intel Macs:」のファイルをダウンロードする。

![](Figs/Install/cran_mac.png){fig-align="center" width="800px"}

　自分のPCのCPUを確認する方法は、macOSの左上のりんごボタンをクリックし、「このMacについて（About This Mac）」をクリックすると、自分のPC情報が表示される。ここで「チップ」項目を確認し、「M1」か「M2」であればApple Siliconであり、Intelという文字が含まれていればIntel製のCPUである（たとえば、「3.8 GHz 8-Core Intel Core i7」）。

![](Figs/Install/mac_cpu.png){fig-align="center" width="300px"}

　ダウンロードしたインストーラーを開き、指示通りに操作するとRはインストールは完了だ。

### Windows

#### Step 1: ユーザー名を確認する

今は日本語のユーザー名でもインストールの問題はないと考えられるが、パッケージのインストールができない場合がある。

* <http://nineworks2.blog.fc2.com/blog-entry-123.html>

#### Step 2: Rのインストール

　Rの公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の「Download R for Windows」をクリックする。続いて、「base」をクリックする。最後に次の画面で「Download R-4.3.1 for Windows」をクリックしてインストーラーをダウンロードする。「4.3.1」の箇所は最新バージョンの値であり、新しいバージョンがリリースされると、ここの数字も変わる。

![](Figs/Install/cran_win1.png){fig-align="center" width="800px"}

　ダウンロードが完了したらインストーラーを開き、指示通りに操作する。基本的に「はい」、「次へ」だけで問題ない。

#### Step 3: Rtoolsのインストール

　の公式レポジトリである[CRAN](https://cran.r-project.org/)にアクセスし、画面上段の「Download R for Windows」をクリックする。続いて、「Rtools」をクリックする。いくつかのRtoolsが表示されるが、ここでは自分が使用するRのバージョンに合ったものを選択する。たとえば、インストールしたRのバージョンが4.3.Xなら「RTools 4.3」を、4.1.3なら「RTools 4.0」を選択する。右側に対応するRバージョンが表示されるので参照すること。

![](Figs/Install/cran_win2.png){fig-align="center" width="600px"}

　続いてRtoolsのインストーラーをダウンロードする。ただし、インストーラーのリンクが画面の最上段に位置しないことに注意されたい。ページの真ん中辺りに「Rtools43 installer」というリンクがあるが、これをクリックするとインストーラーがダウンロードされる。ここでも「43」はRtoolsのバージョンに応じて数字が異なる。

![](Figs/Install/cran_win3.png){fig-align="center" width="800px"}

　ダウンロードが完了したらインストーラーを開き、指示通りに操作する。基本的に「はい」、「次へ」だけで問題ない。

### Ubuntu（Linux）

　以下の内容はDebian系LinuxディストリビューションであるUbuntuをベースとした解説である。他のDebian系やその他のLinux（Redhat系、Arch系）についてはCRAN公式ページを参照されたい。

#### Step 1: インストールの準備

　これから様々なパッケージをインストールしていくが、その前にgdebiとwgetをインストールしておく必要がある。gdebiは`.deb`形式のソフトウェア、ライブラリをインストールするためのパッケージであり、wgetはインターネット上のファイルをダウンロードするためのパッケージだ。ただ、Linuxをそこそこ使っている読者であれば、この2つはインストール済みである可能性が高く、そもそも多くのDebian系ディストリビューションでは最初から導入済みである。もし、インストールされているかどうか不安な場合はターミナル（terminal; 「端末」とも訳される場合がある）を開き、以下のように入力する（最初の`$`は入力しない）。最初はパスワード入力が求められる。

```bash
$ sudo apt update
$ sudo apt install -y gdebi-core wget
```

#### Step 2: 日本語フォントのインストール

　引き続き、作図に使用する日本語フォントをインストールする。好きなフォントを入れても良いが、ここでは[IPAex](https://moji.or.jp/ipafont/)フォントを導入する。ターミナルから以下のコマンドを入力し、IPAexフォントをインストールする。

```bash
$ sudo apt install -y fonts-ipaexfont
```

　続いて、以下のコマンドでフォントのキャッシュファイルを更新する。

```bash
$ fc-cache -f -v
```

　以上でIPAexフォントは使えるが、正しく登録されているかを確認したい場合は以下のように入力する。登録されている場合、IPAexフォントがインストールされているパスが表示される。

```bash
$ fc-list | grep IPAex
```

#### Step 3: 依存パッケージのインストール

　続いて、多くのRパッケージが依存するLinux側のパッケージをインストールする。こちらは必須ではないが、LinuxでRを使っていくといつかは通る道である。他にも依存パッケージは数十種類（それ以上かも）あるが、ここではよく使われるものをインストールしておく。

```bash
$ sudo apt install -y build-essential
$ sudo apt install -y libcurl4-openssl-dev
$ sudo apt install -y libcurl4-gnutls-dev
$ sudo apt install -y libxml2-dev
$ sudo apt install -y libssl-dev
$ sudo apt install -y libx11-dev
$ sudo apt install -y libglu1-mesa-dev
$ sudo apt install -y libmagick++-dev
$ sudo apt install -y libudunits2-0
$ sudo apt install -y libudunits2-dev
$ sudo apt install -y libgdal-dev libproj-dev
$ sudo apt install -y libgmp3-dev
$ sudo apt install -y curl
$ sudo apt install -y poppler-utils
$ sudo apt install -y poppler-data
```

　今後、Rでパッケージをインストールする際、「XXXがない」と表示される場合があり、その時には「ターミナルで以下のようなコマンドを入力してね」といったメッセージも表示される。その場合はターミナルで指示通りにコマンドを入力しよう。

#### Step 4: Rのインストール

　Rのインストールは2つの選択肢がある。簡単なやり方はUbuntu公式レポジトリからインストールする方法だ。ただし、最新版は使えず、2023年6月現在、R 4.2.1がインストールされる（最新版は4.3.1）。最新版にこだわらないなら、ターミナルで以下のように入力するだけだ。

```bash
$ sudo apt update
$ sudo apt install -y r-base
```

　もう一つのやり方はやや面倒だが、最新版が使える方法で、Ubuntuレポジトリでなく、Rの公式レポジトリを使うやり方だ。そのためには予めRのレポジトリを登録しておく必要がある。以下のコマンドを入力するが、もしR 5.xがリリースされるとURLも変更になるため、以下のコマンドはR 4.Xの例であることを断っておきたい。

```bash
$ sudo apt update -qq
$ sudo apt install --no-install-recommends software-properties-common dirmngr
$ gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
$ wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
$ sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
$ sudo apt update
$ sudo apt install -y r-base
```

　これでRのインストールは完了だ。ターミナルで以下のように入力するとRが起動される。

```bash
$ R
```

## Rのアップデート

## クラウド版の利用

　自分のPCでなく、クラウドでRとRStudioを使うこともできる。この場合、インターネットさえ繋がっていれば、どのPCでも使用可能だ。また、自分のPCのスペックが低い場合でも、快適な分析ができる[^cloud-spec]。そして何より複雑なインストール手順が不要という点が最大のメリットである。

[^cloud-spec]: ただし、自分のPCがハイスペックでも、クラウド版のRはサーバーの性能に依存するため、ハイスペックの恩恵は受けられない。

### RStudio Cloud

　[RStudio Cloud](https://posit.cloud/)はRStudioの開発元である[Posit](https://posit.co/)社が提供するクラウドサービスである。会員登録さえすればすぐにRとRStudioが使える。無料のプランもあるが、月25時間までしか使用できず、性能面での制約も大きい。有料のプランはいくつか用意されており、最も安い月5米ドルのプラン（Cloud Plus）だと無料プランと同じ性能で月75時間まで使用可能だ。

### JDCat分析ツール

　[JDCat分析ツール](https://meatwiki.nii.ac.jp/confluence/display/jdcatanalysis)は国立情報学研究所（NII）が提供するクラウド版のR + RStudioであり、`ac.jp`、または`go.jp`で終わるメールアドレスを持っている場合**のみ**使用可能だ。有料のプランは存在せず、全て無料である。また、稼働時間の制約もないため、おすすめだ。また、Rだけでなく、Python + Jupyterも使えるのも長所の一つだ。ただし、常に最新版が使えるわけではなく、RとRStudioは半年〜1年遅れてアップデートされる。

:::{.callout-important}
#### 「導入」は1回だけで十分

　以下は「導入」と「再利用」について解説するが、「導入」はインストールに該当する内容であり、1回だけで十分だ。2回以上行っても良いが、新しいサーバーを立ち上げることになる（サーバー間のデータ転送はできない）。また、一人が生成可能な最大サーバー数は10個までだ。特段の事情が無い限り、「導入」は1回のみ実行し、次回からは「最利用」の手順に従ってJDCat分析ツールを起動すること。
:::

#### 導入

1. [OpenIdPのホームーページ](https://openidp.nii.ac.jp/)へ作成し、アカウントを作成する。登録に使用するメールアドレスは**必ず**`ac.jp`または`go.jp`で終わるメールアドレスを入力する必要がある。
   * <https://openidp.nii.ac.jp/>
   * OpenIdPアカウントの作り方：<https://meatwiki.nii.ac.jp/confluence/pages/viewpage.action?pageId=88607831>
2. アカウントが発行されたら、以下のURLへアクセスする。『私たちのR』で使用するパッケージを事前にインストールするように設定したレポジトリである。
   * <https://binder.cs.rcos.nii.ac.jp/v2/gh/JaehyunSong/Binder_R/HEAD>
3. 所属機関の選択で「OpenIdP」を入力し、選択する。
4. OpenIdPのアカウント情報を入力し、ログインする。
5. 送信属性の選択画面が表示されたら、そのまま「同意」を選択する。
6. しばらく待つとJupyter Hubのホーム画面が表示される（〜5分所要）。
7. RStudio Serverの起動は画面右上の「▼」をクリックし、RStudioを選択すれば良い。

![RStudioの起動](Figs/Install/launch.png){fig-align="center" width="800px"}

#### 再利用

1. 以下のURLへアクセスする。ブラウザーのお気に入りに追加しておいても良いだろう。
   * <https://jupyter.cs.rcos.nii.ac.jp/>
2. 所属機関の選択で「OpenIdP」を入力し、選択する。
3. OpenIdPのアカウント情報を入力し、ログインする。
4. 送信属性の選択画面が表示されたら、そのまま「同意」を選択する。
5. サーバーリストにあるURLをクリックすると、Jupyter Hubのホーム画面が表示される。RStudioの起動は画面右上の「▼」をクリックし、RStudioを選択すれば良い。

![起動するサーバーの選択画面](Figs/Install/serverlist.png){fig-align="center" width="800px"}