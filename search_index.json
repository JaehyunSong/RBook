[
["visualization2.html", "17. 可視化[基礎] 17.1 本章の内容 17.2 実習用データ 17.3 棒グラフ 17.4 ヒストグラム 17.5 散布図 17.6 図のカスタマイズ 17.7 図の保存 17.8 練習問題", " 17. 可視化[基礎] 17.1 本章の内容 前章ではggplot2の仕組みおよびグラフィックの文法と良いグラフについて説明しました。本章では実際に簡単なグラフを作りながらggplot2に慣れて頂きたいと思います。ggplot2で作れる図の種類は非常に多いですが、本章では、データサイエンスで頻繁に利用される以下の5つのプロットの作り方を紹介します。 棒グラフ ヒストグラム 散布図 折れ線グラフ 箱ひげ図 その他の図や、図の細かい修正については第18章で解説します。 17.2 実習用データ 実習の前に本章で使用するデータとggplot2パッケージが含まれているtidyverseを読み込みます。 データ1: 国家別民主主義および政治的自由データ データ2: COVID-19データ library(tidyverse) Country_df &lt;- read_csv(&quot;Data/Countries.csv&quot;) COVID19_df &lt;- read_csv(&quot;Data/COVID19_Worldwide.csv&quot;, col_types = c(&quot;dccdddddd&quot;)) データの情報源 各変数の詳細は以下の通りです。 表 17.1: Countries.csvの詳細 変数名 説明 詳細 Country 国名 Population 人口 人 Area 面積 km\\(^2\\) GDP 国内総生産 (GDP) 100万米ドル PPP GDP (購買力平価): 100万米ドル GDP_per_capita 一人あたりGDP 米ドル PPP_per_capita 一人あたりGDP (購買力平価) 米ドル G7 G7構成国 1:構成国, 0:構成国以外 G20 G20構成国 1:構成国, 0:構成国以外 OECD OECD構成国 1:構成国, 0:構成国以外 HDI_2018 人間開発指数 2018年基準 Polity_Score 民主主義の程度 Polity IVから; -10:権威主義〜10:民主主義 Polity_Type 民主主義の程度 (カテゴリ) FH_PR 政治的自由の指標 2020年基準; Freedom Houseから FH_CL 市民的自由の指標 2020年基準; Freedom Houseから FH_Total 政治的自由と市民的自由の合計 2020年基準; Freedom Houseから FH_Status 総合評価 F:完全な自由; PF:一部自由; NF:不自由 Continent 大陸 表 17.2: COVID19_Worldwide.csvの詳細 変数名 説明 ID ID Country 国名 Date 年月日 Confirmed_Day 新規感染者数（人） Confirmed_Total 累積感染者数（人） Death_Day 新規死亡者数（人） Death_Total 累積死亡者数（人） Test_Day 新規検査数（人） Test_Total 累積検査数（人） 17.3 棒グラフ 棒グラフについては以下の2つのタイプについて説明します。 ある変数の数の表す棒グラフ 各グループの統計量を表す棒グラフ 前者は「データ内にアフリカのケースはいくつあるか、アジアの行はいくつあるか」のようなものであり、後者は「大陸ごとの民主主義の度合いの平均値はいくつか」を出力するグラフです。 17.3.1 ケース数のグラフ まず、Country_dfのContinent変数における各値の頻度数を棒グラフとして出してみましょう。表としてまとめる簡単な方法はtable()関数があります。 table(Country_df$Continent) ## ## Africa America Asia Europe Oceania ## 54 36 42 50 4 ケース数の棒グラフは、大陸名を横軸に、ケース数を縦軸にしたグラフです。それではグラフを作ってみます。データはCountry_dfであり、使う幾何オブジェクトはgeom_bar()です。ここで必要な情報は横軸、つまり大陸 (Continent)のみです。縦軸も「ケース数」という情報も必要ですが、ggplot2が勝手に計算してくれるので、指定しません。また、labs()レイヤーを追加します。labs()レイヤーはマッピング要素のラベルを指定するものです。これを指定しない場合、aes()内で指定した変数名がそのまま出力されます。 Country_df %&gt;% ggplot() + geom_bar(aes(x = Continent)) + labs(x = &quot;大陸&quot;, y = &quot;ケース数&quot;) 使用しているPCのOSによっては、このように文字化けすることもあります。この場合は、プロットで使用するフォント群 (font family)を指定する必要があります。たとえば、macOSの場合、ヒラギノ角コジックW3がよく使われます (W0からW9まであり、数字が大きくなると太字になります)。フォント群の指定はtheme_*()関数のbase_family引数で行います。ここのtheme_*()ですが、*の箇所にはgrayやbw、minimalなどが入ります。ggplot2が提供しているテーマについてはここを参照してください。また、ggthemesやegg、hrbrthemesなどのパッケージを導入すると様々なテーマが利用可能になります。デフォルトのテーマはgrayですが、今回はbwにし、ヒラギノ角コジックW3 (\"HiraKakuProN-W3\")をフォント群として指定します。 Country_df %&gt;% ggplot() + geom_bar(aes(x = Continent)) + labs(x = &quot;大陸&quot;, y = &quot;ケース数&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) これで初めてのggplot2を用いたグラフが完成しました。 17.3.2 記述統計量のグラフ 次は記述統計量のグラフを出してみます。たとえば、大陸ごとに民主主義の指標の1つであるPolity Scoreの平均値を図示するとします。まずは、dplyrを使って、大陸ごとにPolity Score (Polity_Score)の平均値を計算し、Bar_df1という名で保存します。 Bar_df1 &lt;- Country_df %&gt;% group_by(Continent) %&gt;% summarise(Democracy = mean(Polity_Score, na.rm = TRUE), .groups = &quot;drop&quot;) Bar_df1 ## # A tibble: 5 x 2 ## Continent Democracy ## &lt;chr&gt; &lt;dbl&gt; ## 1 Africa 2.48 ## 2 America 6.93 ## 3 Asia 0.342 ## 4 Europe 7.93 ## 5 Oceania 7.25 それでは、このBar_df1を基にグラフを作りますが、今回は縦軸の情報も必要です。横軸はContinent、縦軸はDemocracy変数に指定します。そして、重要なものとしてstat引数を指定します。これはマッピングと関係なく、棒グラフの性質に関係するものなので、aes()の外側に位置します。これを指定しない場合、geom_bar()は基本的にはケース数を計算し、図示します。Passengerの値そのものを縦軸にしたい場合はstat = \"identity\"を指定します。後は、先ほどの棒グラフと同じです。 Bar_df1 %&gt;% ggplot() + geom_bar(aes(x = Continent, y = Democracy), stat = &quot;identity&quot;) + labs(x = &quot;大陸&quot;, y = &quot;Polity IV スコアの平均値&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) 考えてみれば、大陸名が英語になっていますね。図内の言語は統一するのが原則であり、図の言語は論文やレポート、報告書の言語とも一致させるべきです。ここはBar_df1のContinent列の値を日本語に置換するだけでいいので、recode()関数を使います。recode()の使い方は第13.3章を参照してください。また、順番はローマ字順にしたいので、fct_inorder()を使って、Bar_df1における表示順でfactor化を行います。 Bar_df1 %&gt;% mutate(Continent = recode(Continent, &quot;Africa&quot; = &quot;アフリカ&quot;, &quot;America&quot; = &quot;アメリカ&quot;, &quot;Asia&quot; = &quot;アジア&quot;, &quot;Europe&quot; = &quot;ヨーロッパ&quot;, .default = &quot;オセアニア&quot;), Continent = fct_inorder(Continent)) %&gt;% ggplot() + geom_bar(aes(x = Continent, y = Democracy), stat = &quot;identity&quot;) + labs(x = &quot;大陸&quot;, y = &quot;Polity IV スコアの平均値&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) 17.3.3 図の保存 綺麗な図も出来上がりましたので、みんなに自慢してみましょう。ただ、自慢のためにパソコンを持ち歩くのは大変なので、ファイルと保存してみんなに配りましょう。自慢する相手がいないならSONGに自慢しても結構です。図のフォーマットはPNGかPDFが一般的です。JPEGなど圧縮フォーマットは絶対にダメです。PNGとPDFは前者はピクセルベース、後者がベクトルベースで、PDFの方が拡大してもカクカクせず綺麗です。ただし、一部の文書作成ソフトウェアでPDFを図として扱えない点や、サイズの問題 (一般的にPDFの方がサイズが大きい)もあるので、PNGを使うケースも多いです。むろん、\\(\\LaTeX\\)を使うなら、PDF一択です。 保存方法として以下の2つを紹介します。 ggsave()を利用: 簡単。ただし、macOSで日本語が含まれるPDFとして保存する場合は問題が生じる。 quartz()を利用: macOS、かつ日本語が含まれるPDFならこちらを利用 17.3.3.1 ggsave()を利用した図の保存 ggsave()がggplot2が提供する図の保存関数です。まずは、使い方から紹介します。 # ggsave()を利用した保存方法 ggsave(filename = &quot;ファイル名&quot;, plot = 図のオブジェクト名, device = &quot;pdf&quot;や&quot;png&quot;など, width = 図の幅, height = 図の高さ、 units = &quot;in&quot;や&quot;cm&quot;など、幅/高さの単位) deviceで指定可能なフォーマットとしては\"png\"、\"eps\"、\"ps\"、\"tex\"、\"pdf\"、\"jpeg\"、\"tiff\"、\"bmp\"、\"svg\"、\"wmf\"があります。また、unitsは\"in\" (インチ)、\"cm\"、\"mm\"が指定可能です。他にもdpi引数でdpi (dots per inch; 1平方インチにどれだけのドットの表現ができるか)の指定も可能ですが、デフォルトは300となっており、出版用としては一般的なdpiとなっています。それでは、本章の最初に作成した棒グラフをBarPlot1という名で保存し、Figsフォルダー内にBarPlot1.pngとして保存してみます。幅と高さは5インチにします。 BarPlot1 &lt;- Country_df %&gt;% ggplot() + geom_bar(aes(x = Continent)) + labs(x = &quot;大陸&quot;, y = &quot;ケース数&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ggsave(filename = &quot;Figs/BarPlot.png&quot;, plot = BarPlot1, device = &quot;png&quot;, width = 5, height = 5, units = &quot;in&quot;) 17.3.3.2 quartz()を利用した図の保存 macOSを使用し、日本語などのマルチバイトの文字が含まれる図の場合、ggsave()が正しく作動しません。この場合はquartz()とdev.off()関数を利用して図を保存します。この関数の使い方は以下の通りです。 # quartz()を利用した保存方法 quartz(type = &quot;pdf&quot;, file = &quot;ファイル名&quot;, width = 図の幅, height = 図の高さ) 作図のコード、または図オブジェクトの呼び出し dev.off() quartz()のwidthとheight引数の場合、単位はインチ (=2.54cm)です。 たとえば、最初に作成した図をFigsフォルダーのBarPlot1.pdfという名で保存し、幅と高さを5インチにするなら以下のようなコードになります。 # 方法1 quartz(type = &quot;pdf&quot;, file = &quot;Figs/BarPlot1.pdf&quot;, width = 5, height = 5) Country_df %&gt;% ggplot() + geom_bar(aes(x = Continent)) + labs(x = &quot;大陸&quot;, y = &quot;ケース数&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) dev.off() または、予め図をオブジェクトとして保存しておいたなら (先ほどのBarPlot1オブジェクトのように)、以下のようなコードも可能です。 # 方法2 quartz(type = &quot;pdf&quot;, file = &quot;Figs/BarPlot1.pdf&quot;, width = 5, height = 5) BarPlot1 dev.off() 17.3.4 次元を追加する 記述統計量のグラフを見るとマッピング要素は2つであり、これは図が2つの次元、つまり大陸とPolity IVスコアの平均値で構成されていることを意味します。記述統計量のグラフはマッピング要素は1つですが、ケース数という次元が自動的に計算されるため2次元です。ここにもう一つの次元を追加してみましょう。たとえば、大陸ごとのPolity IVスコアの平均値を出しますが、これを更にOECD加盟有無で分けてみましょう。そのためには、まず大陸とOECD加盟有無でグループを分けてPolity IVスコアの平均値を計算する必要があります。 Bar_df2 &lt;- Country_df %&gt;% group_by(Continent, OECD) %&gt;% summarise(Democracy = mean(Polity_Score, na.rm = TRUE), .groups = &quot;drop&quot;) Bar_df2 ## # A tibble: 9 x 3 ## Continent OECD Democracy ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Africa 0 2.48 ## 2 America 0 6.55 ## 3 America 1 8.6 ## 4 Asia 0 -0.314 ## 5 Asia 1 8 ## 6 Europe 0 5.87 ## 7 Europe 1 9.12 ## 8 Oceania 0 4.5 ## 9 Oceania 1 10 続いて、ContinentとOECD列を日本語に直します。また、順番を指定するためにfactor化しましょう。 Bar_df2 &lt;- Bar_df2 %&gt;% mutate(Continent = recode(Continent, &quot;Africa&quot; = &quot;アフリカ&quot;, &quot;America&quot; = &quot;アメリカ&quot;, &quot;Asia&quot; = &quot;アジア&quot;, &quot;Europe&quot; = &quot;ヨーロッパ&quot;, .default = &quot;オセアニア&quot;), Continent = fct_inorder(Continent), OECD = recode(OECD, &quot;0&quot; = &quot;OECD非加盟国&quot;, &quot;1&quot; = &quot;OECD加盟国&quot;), OECD = fct_inorder(OECD)) Bar_df2 ## # A tibble: 9 x 3 ## Continent OECD Democracy ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 アフリカ OECD非加盟国 2.48 ## 2 アメリカ OECD非加盟国 6.55 ## 3 アメリカ OECD加盟国 8.6 ## 4 アジア OECD非加盟国 -0.314 ## 5 アジア OECD加盟国 8 ## 6 ヨーロッパ OECD非加盟国 5.87 ## 7 ヨーロッパ OECD加盟国 9.12 ## 8 オセアニア OECD非加盟国 4.5 ## 9 オセアニア OECD加盟国 10 これで作図の準備ができました。それではこの新しい次元であるOECDをどのように表現すれば良いでしょうか。Continentは横軸の位置で表現され、Democracyは縦軸の位置として表現されているため、xとy以外の要素を考えてみましょう。棒グラフの場合、もう一つの軸が追加されるとしたらそれは、棒の色です。棒の色はfillで指定できます。colorでないことに注意してください。colorも指定可能ですが、これは棒の色ではなく、棒を囲む線の色であり、通常は「なし」となっています。それではfillをaes()内に書き加えます。 Bar_df2 %&gt;% ggplot() + geom_bar(aes(x = Continent, y = Democracy, fill = OECD), stat = &quot;identity&quot;) + labs(x = &quot;大陸&quot;, y = &quot;Polity IV スコアの平均値&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) なんか思ったものと違うものが出てきました。たとえば、アメリカ大陸の場合、Polity IVスコアの平均値が約15ですが、明らかにおかしいです。なぜならPolity IVスコアの最大値は10だからです。これは2つの棒が積み上げられているからです。アメリカ大陸においてOECD加盟国の平均値は8.6、非加盟国のそれは6.55であり、足したら15.15になります。これをずらすためにはpositionを設定する必要があります。しかし、positionというのはBar_df2の何かと変数の値を表すわけではないため、aes()の外側に入れます。そして、その値ですが、ここでは\"dodge\"を指定します。これは棒の位置が重ならないように調整することを意味します。このpositionのデフォルト値は\"stack\"であり、言葉通り「積み上げ」です。 Bar_df2 %&gt;% ggplot() + geom_bar(aes(x = Continent, y = Democracy, fill = OECD), stat = &quot;identity&quot;, position = &quot;dodge&quot;) + labs(x = &quot;大陸&quot;, y = &quot;Polity IV スコアの平均値&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) これで私たちが期待した図が出来上がりました。「\"dodge\"の方が普通なのになぜデフォルトが\"stack\"か」と思う方もいるかも知れませんが、実は\"stack\"も頻繁に使われます。それはケース数のグラフにおいてです。 たとえば、大陸ごとにOECD加盟/非加盟国を計算してみましょう。 Bar_df3 &lt;- Country_df %&gt;% group_by(Continent, OECD) %&gt;% summarise(N = n(), .groups = &quot;drop&quot;) %&gt;% mutate(Continent = recode(Continent, &quot;Africa&quot; = &quot;アフリカ&quot;, &quot;America&quot; = &quot;アメリカ&quot;, &quot;Asia&quot; = &quot;アジア&quot;, &quot;Europe&quot; = &quot;ヨーロッパ&quot;, .default = &quot;オセアニア&quot;), Continent = fct_inorder(Continent), OECD = recode(OECD, &quot;0&quot; = &quot;OECD非加盟国&quot;, &quot;1&quot; = &quot;OECD加盟国&quot;), OECD = fct_inorder(OECD)) Bar_df3 ## # A tibble: 9 x 3 ## Continent OECD N ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 アフリカ OECD非加盟国 54 ## 2 アメリカ OECD非加盟国 31 ## 3 アメリカ OECD加盟国 5 ## 4 アジア OECD非加盟国 39 ## 5 アジア OECD加盟国 3 ## 6 ヨーロッパ OECD非加盟国 23 ## 7 ヨーロッパ OECD加盟国 27 ## 8 オセアニア OECD非加盟国 2 ## 9 オセアニア OECD加盟国 2 これを可視化したのが以下の図です。 Bar_df3 %&gt;% ggplot() + geom_bar(aes(x = Continent, y = N, fill = OECD), stat = &quot;identity&quot;) + labs(x = &quot;大陸&quot;, y = &quot;国家数&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) この図はposition = \"dodge\"でも良いと思いますが、大陸内の比率を考えるならposition = \"stack\"でも問題ないでしょう。また、積み上げグラフの特性上、大陸ごとの国数の合計も一瞬で判別できるといった長所もあります。position = \"dodoge\"だと、それが難しいですね。むろん、積み上げ棒グラフはベースラインが一致したいため、避けるべきという人も多いですし、著者 (SONG)も同意見です。どの図を作成するかは分析者の責任で判断しましょう。 17.4 ヒストグラム ヒストグラムは棒グラフと非常に形が似ていますが、横軸が大陸のような離散変数でなく、連続変数であるのが特徴です。連続変数をいくつの区間 (階級)に分け、その区間内に属するケース数 (度数)を示したのが度数分布表、そして度数分布表をかしかしたものがヒストグラムです。連続変数を扱っているため、棒間に隙間がありません。それでもケース数の棒グラフと非常に似通っているため、マッピングの仕方も同じです。異なるのは幾何オブジェクトがgeom_bar()でなく、geom_histogram()に変わるくらいです。世界の富がどのように分布しているかを確認するために、Country_dfのGDPのヒストグラムを作ってみます。 Country_df %&gt;% ggplot() + geom_histogram(aes(x = GDP)) + labs(x = &quot;国内総生産 (100万米ドル)&quot;, y = &quot;度数&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 rows containing non-finite values (stat_bin). ケース数の棒グラフのコードとほぼ同じです。横軸の数値が2.0e+07になっているのは2 \\times 10^7、つまり2千万を意味します。普通に表記すると20000000になりますね。また、GDPの単位は100万ドルであるため、実際のGDPは20兆ドルになります。つまり、今のヒストグラムにおいて横軸の目盛りは5兆ドルになっています。この軸の数値を「0, 5e+06, 1e+07, 1.5e+07, 2e+07」から「0, 5, 10, 15, 20」 にし、X軸のラベルを「国内総生産 (100万米ドル)」から「国内総生産 (兆米ドル)」に替えてみましょう。ここで使うのはscale_x_continuous()関数です。これは横軸 (X軸)が連続変数 (continuous)の場合のスケール調整関数です。目盛りの再調整にはbreaksとlabels引数が必要です。breaksは新しい目盛りの位置、labelsは目盛りに表記する値です。それぞれベクトルが必要であり、breaksとlabelsの実引数の長さは必ず一致する必要があります。また、breaksは数値型ベクトルですが、labelsは数値型でも文字型でも構いません。 Country_df %&gt;% ggplot() + geom_histogram(aes(x = GDP)) + labs(x = &quot;国内総生産 (兆米ドル)&quot;, y = &quot;度数&quot;) + scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000), labels = c(0, 5, 10, 15, 20)) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 rows containing non-finite values (stat_bin). これで一通りヒストグラムが完成しました。ほんの一部の国は非常に高いGDPを誇っていることが分かります。GDPが10兆ドル以上の国はアメリカと中国のみであり、5兆ドルを国まで拡大しても日本が加わるだけです。そもそも1兆ドルを超える国はデータには16カ国しかなく、90%以上の国が図の非常に狭い範囲内に集まっていることが分かります。 ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 rows containing non-finite values (stat_bin). この場合、2つの方法が考えられます。1つ目は方法は情報の損失を覚悟した上で、GDPが1兆ドル未満の国でヒストグラムを書く方法です。 Country_df %&gt;% filter(GDP &lt; 1000000) %&gt;% ggplot() + geom_histogram(aes(x = GDP)) + labs(x = &quot;国内総生産 (兆米ドル)&quot;, y = &quot;度数&quot;) + scale_x_continuous(breaks = seq(0, 1000000, 100000), labels = seq(0, 1, 0.1)) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 2つ目の方法は横軸を対数化することです。GDPを底10の対数化 (常用対数)をすると、10兆のような非常に大きい値があっても比較的に狭い範囲内にデータを収めることが出来ます。たとえば、10を常用対数化すると1, 1000は3, 10000000は7になります。自然対数 (底が\\(e\\))も可能ですが、「読む」ためのグラフとしては底が10の方が読みやすいでしょう。横軸の変数が対数化されるということは、横軸のスケールを対数化することと同じです。そのためにはscale_x_continuous()内にtrans引数を指定し、\"log10\"を渡します。 Country_df %&gt;% ggplot() + geom_histogram(aes(x = GDP)) + labs(x = &quot;国内総生産 (兆米ドル)&quot;, y = &quot;度数&quot;) + scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000), labels = c(0, 5, 10, 15, 20), trans = &quot;log10&quot;) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 rows containing non-finite values (stat_bin). 17.5 散布図 続いて、散布図の作成について解説します。散布図においてデータは点で表現され、点を表示するためには、少なくとも横軸と縦軸といった2つの情報が必要です。したがって、マッピングに使う変数は最低2つであり、横軸はx、縦軸はyで指定します。今回はCountry_dfを使って、一人当たりGDP (購買力平価基準)と人間開発指数の関係を調べてみましょう。散布図の幾何オブジェクト関数はgeom_point()です。そして、それぞれの変数はPPP_per_capita、HDI_2018であるから、マッピングはaes(x = PPP_per_capita, y = HDI_2018)になります。 Country_df %&gt;% ggplot() + geom_point(aes(x = PPP_per_capita, y = HDI_2018)) + labs(x = &quot;一人当たり購買力平価GDP (USD)&quot;, y = &quot;人間開発指数&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ## Warning: Removed 11 rows containing missing values (geom_point). 以下のメッセージが表示されますが、これは一人当たりGDP (購買力平価基準)または人間開発指数が欠損しているケースが11カ国あることを意味します。たとえば、教皇聖座 (Holy See; いわゆるバチカン)や西サハラ、ソマリアなどの国があります。 ## Warning: Removed 11 rows containing missing values (geom_point). どのようなケースが除外されたかはdplyr::filter()関数を使えば簡単に調べられます。 Country_df %&gt;% filter(is.na(PPP_per_capita) | is.na(HDI_2018)) %&gt;% select(Country, PPP_per_capita, HDI_2018) ## # A tibble: 11 x 3 ## Country PPP_per_capita HDI_2018 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Andorra NA 0.857 ## 2 Cuba NA 0.778 ## 3 Holy See NA NA ## 4 Kosovo 11078. NA ## 5 Liechtenstein NA 0.917 ## 6 Monaco NA NA ## 7 San Marino 62554. NA ## 8 Somalia NA 0.557 ## 9 Syria NA 0.549 ## 10 Taiwan 46145. NA ## 11 Western Sahara NA NA このように何らかのケースが除外されたとメッセージが出力された場合、ちゃんとどのケースが除外されたかを確認することは重要です。この11カ国は未承認国や国内政治の不安定によりデータが正確に把握できないところがほとんどですね。 散布図を見ると経済力と人間開発指数の間には正の関係が確認できます。ただし、経済力が高くなるにつれ、人間開発指数の増加幅は減少していきます。どちらかと言えば対数関数のような関係でしょう。実際、scale_x_log10()などで横軸を対数化するとほぼ線形の関係が観察できます。今回は座標系を変換して横軸を対数化してみます。座標系の調整はcoord_*()関数群を使いますが、対数化にはcoord_trans()を使います。ここで変換する軸と変換方法を指定します。今回は横軸を底10の対数化を行うからx = \"log10\"と指定します。これはscale_x_log10()と全く同じですが、縦軸も対数化するなどの場面においてはcoord_trans()の方が便利でしょう。 Country_df %&gt;% ggplot() + geom_point(aes(x = PPP_per_capita, y = HDI_2018)) + labs(x = &quot;一人当たり購買力平価GDP (USD)&quot;, y = &quot;人間開発指数&quot;) + coord_trans(x = &quot;log10&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ## Warning: Removed 11 rows containing missing values (geom_point). 対数化してみたら、かなり綺麗な線形関係が確認できます。 散布図の点は横軸の数値と縦軸の数値を持っています。2次元平面で表現できる散布図は少なくとも2つの情報を持つことになります。しかし、2次元平面であっても、3つ以上の情報、つまり3次元以上の情報を示すことが可能です。たとえば、点ごとに色を変更することもできます。OECD加盟国と非加盟国に異なる色を与えると、2次元平面上であっても、3つの情報を含む散布図が作れます。たとえば、国の面積に応じて点の大きさが変わる散布図を作成するならaes()内にsize = Areaを追加するだけです。面積の単位は非常に大きいので、Areaを100万で割った値を使います。 Country_df %&gt;% mutate(Area = Area / 1000000) %&gt;% ggplot() + geom_point(aes(x = PPP_per_capita, y = HDI_2018, size = Area)) + labs(x = &quot;一人あたり購買力平価GDP (USD)&quot;, y = &quot;人間開発指数&quot;, size = &quot;面積 (100万km2)&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ## Warning: Removed 11 rows containing missing values (geom_point). 一人当たりGDPが非常に高い国の多くは面積が小さい国が多いですね。 以上のコードでは、aes()だけでなく、labs()内にもsize引数を指定しました。これは凡例のタイトルを指定することです。グラフにおいて大きさの凡例が自動的に表示されますが、そのタイトルになります。指定しない場合は、変数名がタイトルになります。 Country_df %&gt;% mutate(Area = Area / 1000000) %&gt;% ggplot() + geom_point(aes(x = PPP_per_capita, y = HDI_2018, size = Area, color = OECD)) + labs(x = &quot;一人あたり購買力平価GDP (USD)&quot;, y = &quot;人間開発指数&quot;, size = &quot;面積 (100万km2)&quot;, color = &quot;OECD加盟有無&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ## Warning: Removed 11 rows containing missing values (geom_point). Country_df %&gt;% mutate(Area = Area / 1000000, OECD = factor(OECD, levels = 0:1, labels = c(&quot;非加盟国&quot;, &quot;加盟国&quot;))) %&gt;% ggplot() + geom_point(aes(x = PPP_per_capita, y = HDI_2018, size = Area, color = OECD)) + labs(x = &quot;一人あたり購買力平価GDP (USD)&quot;, y = &quot;人間開発指数&quot;, size = &quot;面積 (100万km2)&quot;, color = &quot;OECD加盟有無&quot;) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) ## Warning: Removed 11 rows containing missing values (geom_point). 17.6 図のカスタマイズ 17.6.1 coord_*(): 座標系の調整 17.6.2 scale_*_*(): スケールの調整 17.6.3 theme_*(): テーマの指定 17.6.4 theme(): テーマの調整 17.7 図の保存 17.8 練習問題 dfを用い、以下のような図を作成せよ。 "]
]
