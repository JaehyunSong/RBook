[
["visualization1.html", "15. 可視化[理論] 15.1 可視化のためのパッケージ 15.2 良いグラフとは 15.3 グラフィックの文法", " 15. 可視化[理論] 15.1 可視化のためのパッケージ Rのbase graphic lattice ggplot2 15.2 良いグラフとは BBC Visual and Data Journalism cookbook for R graphics 15.3 グラフィックの文法 15.3.1 グラフィックの文法 本書では特別な事情がない限り、ggplot2による可視化のみを扱います。既にggplot2のggが「グラフィックの文法 (grammer of graphics)」だと説明しましたが、この概念は Wilkinson (2005) によって提唱された比較的新しいものであり、ggplot2はHadley先生がグラフィックの文法に則った作図のプロセスをRで具現化したものです。 グラフィックスの文法とは、グラフを構造化された方法で記述し、レイヤーを積み重ねることによってグラフを構築するフレームワークです。グラフは様々な要素で構成されています。横軸と縦軸、点、線、グラフ、凡例、図のタイトルなどがあります。横軸や縦軸は線の太さ、目盛りの間隔、数字の大きさなどに分割することも可能です。このように1つのグラフは数十、数百以上の要素の集合です。これら一つ一つの要素をレイヤーとして捉え、それを積み重ねることでグラフを作成します。これが簡単なggplot2による作図のイメージですが、以下でもうちょっと目に見える形でこれを解説していきます。 15.3.2 ggplot2のイメージ ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) + geom_point(aes(x = Year, y = P, color = Company_Type1), size = 3, pch = 21, fill = &quot;white&quot;) + labs(x = &quot;年度&quot;, y = &quot;平均利用者数 (人/日)&quot;, color = &quot;事業者区分&quot;) + scale_x_continuous(breaks = 2011:2017, labels = 2011:2017) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) # 第1層: キャンバスを用意し、使用するデータはdf ggplot(data = df) # 第2層: X軸はYear、Y軸はPにし、Company_type1ごとに色分けした折れ線グラフを作成し、線の太さは1とする。 ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) # 第3層: X軸はYear、Y軸はPにし、Company_type1ごとに色分けした散布図を作成する。 # 点の大きさは3、点のタイプは21 (外線付き)、点の中身の色は白よする ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) + geom_point(aes(x = Year, y = P, color = Company_Type1), size = 3, pch = 21, fill = &quot;white&quot;) # 第4層: X軸、Y軸のラベルをそれぞれ「年度」、「平均利用者数 (人/日)」に # 凡例のcolorのラベルは「事業者区分」にする ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) + geom_point(aes(x = Year, y = P, color = Company_Type1), size = 3, pch = 21, fill = &quot;white&quot;) + labs(x = &quot;年度&quot;, y = &quot;平均利用者数 (人/日)&quot;, color = &quot;事業者区分&quot;) # 第5層: 連続変数で構成されたX軸を調整する # 目盛りは2011, 2012, ..., 2017とし、ラベルも2011, 2012, ..., 2017に ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) + geom_point(aes(x = Year, y = P, color = Company_Type1), size = 3, pch = 21, fill = &quot;white&quot;) + labs(x = &quot;年度&quot;, y = &quot;平均利用者数 (人/日)&quot;, color = &quot;事業者区分&quot;) + scale_x_continuous(breaks = 2011:2017, labels = 2011:2017) # 第6層: テーマをminimalに指定し、フォント群はHiraKakuProN-W3に ggplot(data = df) + geom_line(aes(x = Year, y = P, color = Company_Type1), size = 1) + geom_point(aes(x = Year, y = P, color = Company_Type1), size = 3, pch = 21, fill = &quot;white&quot;) + labs(x = &quot;年度&quot;, y = &quot;平均利用者数 (人/日)&quot;, color = &quot;事業者区分&quot;) + scale_x_continuous(breaks = 2011:2017, labels = 2011:2017) + theme_minimal(base_family = &quot;HiraKakuProN-W3&quot;) 図 15.1: ggplot2の図が出来上がるまで (全体像) 15.3.3 グラフィックの構成要素 ggplot2におけるプロット (plot)は「データ + 幾何オブジェクト + 座標系」で構成されます。 ここでいうデータは主にデータフレームまたはtibbleです。これは主にggplot()関数の第一引数と指定するか、パイプで渡すのが一般的です。ただし、ggplot2で作図するためには、データを予め整然データに整形する必要があります。 幾何オブジェクト (geometry object)とは簡単に言うと図の種類です。散布図、折れ線グラフ、棒グラフ、ヒストグラムなど、ggplot2は様々なタイプの幾何オブジェクトを提供しており、ユーザー自作の幾何オブジェクトもRパッケージとして多く公開されています。幾何オブジェクトは関数の形で提供されており、geom_で始まるといった共通点があります。散布図はgeom_point()、折れ線グラフはgeom_line()のような関数を使います。 この幾何オブジェクトに線や点、棒などを表示する際には、どの変数が横軸で、どの変数が縦軸かを明記する必要があります。また、変数によって点や線の色が変わったりする場合も、どの変数によって変わるかを明記します。これを マッピング (mapping)と呼びます。また、必要に応じて位置 (position)と統計量 (stat)を明記する必要がありますが、これは指定しなくてもとりあえず何らかの図は出力されます。 最後に座標系 (coordinate system)は幾何オブジェクトが表示される空間の特徴を定義します。最も重要な特徴は横軸と縦軸の下限と上限です。または、空間を回転することなどもできます。 ggplot2の図は以上の3つ要素を重ねることで出来ます。 図 15.2: ggplot2の構造の例 ただし、この中で座標系は適切だと判断される座標系に設定してくれるため、ユーザーが必ず指定すべきものはデータと幾何オブジェクトのみです。また、幾何オブジェクトはマッピングを含んでおり、これも必ず指定する必要があります。したがって、ggplot2で作図するための最小限のコードは以下のようになります。 # ggplot2におけるプロットの基本形 # データはggplotの第一引数と使う場合が多いため、「data =」は省略可能 # マッピングは主に幾何オブジェクトの第一引数として使うため、「mapping =」は省略可能 ggplot(data = データ名) + 幾何オブジェクト関数(mapping = aes(マッピング)) # パイプを使う場合 データ名 %&gt;% ggplot() + 幾何オブジェクト関数(mapping = aes(マッピング)) 注意すべき点はggplot2においてレイヤーを重ねる際は%&gt;%でなく、+を使う点です。パイプ演算子は左側の結果を右に渡す意味を持ちますが、ggplot2はデータを渡すよりも、レイヤーを足していくイメージですから、+を使います。 以下はggplot2の必須要素であるデータと幾何オブジェクト、マッピングなどについて解説し、続いて図は見栄を調整するための関数群を紹介します。 15.3.3.1 データ 作図のためにはデータはなくてはなりません。データはdata.frmae型、またはtibble型であり、一般的にはggplot()関数の第一引数として指定します。例えば、ggplot(data = データ名)のように書いてもいいですし、data =は省略して、ggplot(データ名)でも構いません。 データを指定するもう一つの方法はパイプ演算子を使うことです。この場合、データ名 %&gt;% ggplot()のように書きます。書く手間はほぼ同じですが、dplyrやtidyrなどでデータを加工し、それをオブジェクトとして保存せずにすぐ作図に使う場合は便利です。 実際、使う機会は少ないですが、1つのグラフに複数のデータを使う場合もあります。ggplot2は複数のデータにも対応していますが、とりあえずメインとなるデータをggplot()に指定し、追加的に必要なデータは今度説明する幾何オブジェクト関数内で指定します。この方法については適宜必要に応じて説明します。 15.3.3.2 幾何オブジェクト しかし、データを指定しただけで図が出来上がるわけではありません。指定したデータを使ってどのような図を作るかも指定する必要があります。この図のタイプが幾何オブジェクト (geometry object)であり、geom_*()関数で表記します。たとえば、散布図を作る場合、 データ名 %&gt;% ggplot() + geom_point() のように指定します。以上のコードは「あるデータを使って (データ名 %&gt;%)、キャンバスを用意し (ggplot() +)、散布図を作成する (geom_point())。」と読むことが出来ます。 また、この幾何オブジェクトは重ねることも可能です。よく見る例としては、散布図の上に回帰曲線 (geom_smooth())や折れ線グラフ (geom_line())を重ねたものであり、これらの幾何オブジェクトは+で繋ぐことが可能です。 ggplot2が提供する幾何オブジェクト関数は散布図だけでなく、棒グラフ (geom_bar())、ヒストグラム (geom_histogram())、折れ線グラフ (geom_line())、ヒートマップ (geom_tile())など、データ分析の場面で使われるほとんどの種類が含まれています。他にもユーザーが作成した幾何オブジェクトもパッケージとして多く公開されています（たとえば、非巡回有向グラフ作成のためのggdag、ネットワークの可視化のためのggnetworkなど）。 15.3.3.3 マッピング どのようなデータを使って、どのような図を作るかを指定した後は、変数を指定します。たとえば、散布図の場合、各点の横軸と縦軸における位置情報が必要です。ヒストグラムならヒストグラムに必要な変数を指定する必要があります。このようにプロット上に出力されるデータの具体的な在り方を指定するのをマッピング (mapping)と呼びます。 マッピングは幾何オブジェクト関数内で行います。具体的にはgeom_*()内にmapping = aes(マッピング)で指定します。aes()も関数の一種です。散布図ならgeom_point(mapping = aes(x = X軸の変数, y = Y軸の変数))です。ヒストグラムなら横軸のみを指定すればいいのでgeom_histogram(mapping = aes(x = 変数名))で十分です。マッピングは一般的にはgeom_*()の第一引数として渡しますが、この場合、mapping =は省略可能です。 マッピングに必要な変数、つまりaes()に必要な引数は幾何オブジェクトによって異なります。散布図や折れ線グラフならX軸とY軸の情報が必須であるため、2つ必要です (xとy)。ヒストグラムは連続変数の度数分布表を自動的に作成してからグラフが作られるから1つが必要です (x)。また、等高線図の場合、高さの情報も必要なので3つの変数が必要です (xとy、z)。これらの引数は必ず指定する必要があります。 以上の引数に加え、追加のマッピング情報を入れることも可能です。たとえば、鉄道事業者ごとの平均利用者数を時系列で示した最初の例を考えてみましょう。これは折れ線グラフですので、mapping = aes(x = 年度, y = 利用者数)までは必須です。しかし、この図にはもう一つの情報がありますね。それは事業者のタイプです。事業者のタイプごとに線の色を変えたい場合は、aes()内にcolor = 事業者のタイプを、線の種類を変えたい場合は、linetype = 事業者のタイプのように引数を追加します。こうすると2次元のプロットに3次元の情報 (年度、利用者数、事業者タイプ)を乗せることが可能です。むろん、4次元以上にすることも可能です。たとえば、地域ごとに異なる色を、事業者タイプごとに異なる線のタイプを指定する場合は、mapping = aes(x = 年度, y = 利用者数, color = 地域, linetype = 事業者のタイプ)のように指定します。colorやlinetype以外にも大きさ (size)、透明度 (alpha)、点のタイプ (shape)、面の色 (fill)などを指定することができます。 先ほどマッピング引数は幾何オブジェクト関数内で指定すると言いましたが、実はggplot()内に入れ、geom_*()内では省略することも可能です。幾何オブジェクトが1つのみならどっちでも問題ありません。しかし、幾何オブジェクトが2つ以上の場合は注意が必要です。全ての幾何オブジェクトがマッピングを共有する場合はggplot()の方が書く手間が省きます。しかし、幾何オブジェクトがマッピングを共有しない場合は幾何オブジェクト関数内に別途指定する必要があります。あるいは、共有するところだけ、ggplot()に書いて、共有しない部分だけ幾何オブジェクトで指定することも可能です。 15.3.3.4 その他 以上のことさえ覚えれば、とりあえず図は作れます。最後に、必須要素ではありませんが、幾何オブジェクトに使う引数について説明します。先ほど説明しましたcolorやlinetype、sizeなどはマッピングの情報として使うことも可能ですが、aes()の外側に置くことも可能です。しかし、その挙動はかなり異なります。colorがaes()の外側にある場合は、幾何オブジェクトの全要素に対して反映される。 たとえば、横軸が「ゲームのプレイ時間」、縦軸が「身長」の散布図を作成しるとします。ここでcolor引数を追加しますが、まずはaes()の外側に入れます。 # 例1: 全ての点の色が赤になる データ %&gt;% ggplot() + geom_point(aes(x = ゲームのプレイ時間, y = 身長), color = &quot;red&quot;) ここで注目する点は 散布図におけるすべての点の色がcolorで指定した色 (\"red\" = 赤)に変更された点 colorの引数は変数名でなく、具体的な色を指定する点 以上の2点です。aes()の内側にcolorを指定する場合は、以下のように変数名を指定します。たとえば、性別ごとに異なる色を付けるとしたら、 # 例2: 性別ごとに点の色が変わる データ %&gt;% ggplot() + geom_point(aes(x = ゲームのプレイ時間, y = 身長, color = 性別)) 以上のように書きます。aes()の内部はマッピングの情報が含まれています。言い換えると、aes()の中はある変数がグラフ上においてどのような役割を果たしているかを明記するところです。2つ目の例では性別という変数が色分けをする役割を果たすため、aes()の内側に入ります。一方、1つ目の例では色分けが行われておりません。 ここまでがggplot2の入門の入門の入門です。韓国旅行に例えると、やっと仁川国際空港の入国審査を通ったところです。The R Graph Galleryを見ると、主にggplot2で作成知れた綺麗な図がいっぱいあります。しかし、ここまで勉強してきたものだけでは、このような図を作るのは難しいです。そもそもサンプルコードを見ても理解するのが難しいかも知れません。以下では本格的なggplot2の使い方を解説します。到達目標は(1)「よく使う」グラフが作成できること、そして(2)The R Graph Galleryのサンプルコードを見て自分で真似できるようになることです。 参考資料 "]
]
